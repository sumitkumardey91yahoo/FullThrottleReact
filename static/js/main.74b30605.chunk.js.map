{"version":3,"sources":["service/service.js","store/state.js","store/reducer.js","store/redux-store.js","config/prod-config.js","components/userInput/TextBox.js","components/slider/Slider.js","components/userInput/UserInput.js","components/result/resultLevel.js","components/init/Init.js","App.js","index.js"],"names":["actGetInterestMonth","amount","duration","a","Error","error","parseInt","url","fetch","response","json","result","jsonData","input","getLocalstore","dataset","localStorage","getItem","JSON","parse","initialState","info","reducer","state","stateInit","action","type","payload","store","createStore","config","monthStart","monthEnd","amountRangestart","amountRangeEnd","errorMonth","errorAmount","textInput","name","key","init","TextBox","errorMessage","errorMessageMonth","obj","this","props","map","item","setState","sliderInput","loan_amount","old","validationTxt","actRequestServeice","e","target","value","getTextInfo","console","log","loan_duration","status","data","then","dispatch","initState","Fragment","className","tbox","class","onChange","changeVal","Component","Slider","getd","event","getSliderValue","sendDataset","style","textAlign","marginTop","min","max","id","step","initRange","bind","UserInput","textbox","getFinalData","slider","textAmount","textData","finalData","pos","d","index","getText","getSlider","ResultLevel","objset","interestRate","monthlyPayment","rate","subscribe","getState","unshift","setItem","stringify","actSetLocalstorageData","marginRight","React","Init","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74b30605.chunk.js","sourcesContent":["\n    export const actGetInterestMonth = async (amount, duration) => {\n        if(!amount || !duration) {\n           return new Error({error: 'invalid'})\n        }\n        amount = parseInt(amount)\n        let url, response, result, jsonData\n\n         url = `https://ftl-frontend-test.herokuapp.com/interest?amount=${amount}&numMonths=${duration}`;\n       \n        response  = await fetch(url)\n        result = await response.json()\n        jsonData =  {\n             result,\n             input: {\n                amount,\n                duration\n             }\n        }\n\n        return jsonData;\n    }\n\n    export const actSetLocalstorageData = (amount, duration, rate, monthlyPayment) => {\n        let dataset = [];\n        duration = parseInt(duration)\n        dataset = localStorage.getItem('set-loan-info') ? JSON.parse(localStorage.getItem('set-loan-info')) : [];\n        dataset.unshift({amount, duration,rate, monthlyPayment});\n\n        console.log(\"dataset\", dataset)\n\n        localStorage.setItem(\"set-loan-info\", JSON.stringify(dataset))\n    }\n\n    export const getLocalstore = () => {\n        let dataset = localStorage.getItem(\"set-loan-info\") ? JSON.parse(localStorage.getItem(\"set-loan-info\")) : ''\n        if (dataset) {\n            return dataset[0]\n        }\n        return false;\n    \n    }\n\n","const initialState = {\n    info: []\n };\n export default initialState;","import stateInit from './state'\nconst reducer = function ( state = stateInit , action ) {\n\n\tswitch(action.type) {\n\t\tcase 'getResponseAmountMonth': \n\t\t\tstate.info = action.payload\n\t\t\tbreak;\n\t\tdefault: \n\t}\n\treturn  state;\n};\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from './reducer'\nconst store = createStore(reducer);\n\nexport default store;","const config = {\n    monthStart: 6,\n    monthEnd: 24,\n    amountRangestart: 500,\n    amountRangeEnd: 5000,\n    errorMonth: 'month should be in between 6 to 24',\n    errorAmount: 'amount should be in between 500 to 5000'\n\n}\nconfig.textInput = [{\n        name: \"loan amount\",\n        key: \"loan_amount\",\n        init: config.amountRangestart\n    },\n    {\n        name: \"loan duration\",\n        key: \"loan_duration\",\n        init: config.monthStart\n    }];\n  \n    export default config\n\n","import React, { Component } from 'react';\nimport './text-box.css'\nimport { actGetInterestMonth } from '../../service/service'\nimport store from '../../store/redux-store'\nimport config from '../../config/prod-config';\n\nexport default class TextBox extends Component {\n    constructor() {\n        super();\n        this.state = {\n            errorMessage: '',\n            errorMessageMonth: ''\n        }\n    }\n    initState() {\n        \n        let obj = {}\n        this.props.dataset.map((item) => {\n           return obj[item.key] = item.init\n        })\n\n        this.setState(obj)\n    }\n\n    componentWillReceiveProps(props) {\n        if(!props.sliderInput || (this.props.sliderInput === props.sliderInput)) return\n            this.setState ({\n                loan_amount: props.sliderInput\n            }, (old) => {\n                if(!this.validationTxt())\n                    this.actRequestServeice()\n            })\n    }\n    changeVal(e ,key) {\n        let obj = {};\n        obj[key] = e.target.value\n        this.setState(obj, () => {\n            if(!this.validationTxt())\n                this.actRequestServeice()\n        })\n\n        this.props.getTextInfo(obj)\n    }\n    validationTxt() {\n        console.log(\"validation\", this.state)\n        let {loan_amount, loan_duration} = this.state;\n        let status = false;\n        loan_amount = loan_amount ? parseInt(loan_amount) : 0\n        loan_duration = loan_duration ? parseInt(loan_duration) : 0\n\n        \n        if(loan_duration >= config.monthStart && loan_duration <=  config.monthEnd) {\n           \n            this.setState({errorMessageMonth: ''})\n        } else {\n            this.setState({errorMessageMonth: config.errorMonth} , () => {\n                console.log(\"r\", config.errorMonth)\n                console.log(this.state.errorMessage)\n            })\n            \n            status = true\n        }\n         \n        if(loan_amount >= config.amountRangestart && loan_amount <=  config.amountRangeEnd) {\n           this.setState({errorMessage: ''})\n        } else {\n            this.setState({errorMessage: config.errorAmount})\n            status = true\n            \n        }\n        return status;\n    }\n    actRequestServeice(data) {\n            let {loan_amount, loan_duration} = this.state;\n            actGetInterestMonth(loan_amount, loan_duration).then((response) => {\n                store.dispatch({\n                    type: 'getResponseAmountMonth',\n                    payload: response\n                });\n            }, (error) => {\n\n            })\n\n    }\n    componentWillMount() {\n        this.initState();\n    }\n    render() {\n        return (\n            <React.Fragment>\n                \n                <div className=\"main-text\">\n                { this.props.dataset.map((tbox) => \n                <div class=\"t-box-div\">\n                        <h5> {tbox.name}</h5>\n                        <input type=\"text\"  key={tbox.key} value={this.state[tbox.key]} onChange={(e) => this.changeVal(e, tbox.key)} />\n                    </div>\n                    )}\n                </div>\n                <p>{this.state.errorMessage}</p>\n                <p>{this.state.errorMessageMonth}</p>\n            </React.Fragment>\n            )\n        }\n}","import React, { Component } from 'react';\nimport './slider-style.css'\nimport  config  from '../../config/prod-config'\nimport { getLocalstore } from '../../service/service'\nexport default class Slider extends Component  {\n    constructor(props) {\n        super(props);\n        \n        this.amountRangestart = config.amountRangestart;\n        this.amountRangeEnd = config.amountRangeEnd;\n        let getd = getLocalstore()\n        let data = ''\n    \n        if(getd) {\n            data = getd.amount\n        }\n\n        this.state = {\n            data: data ? data : this.amountRangestart\n        }\n\n    }\n    \n    initRange(event) {\n        this.setState({\n            data: event.target.value\n        },() => {\n            this.props.getSliderValue(this.state.data)\n        });\n        \n    }\n    componentWillReceiveProps(props) {\n        let { sendDataset } = props;\n        if(props.sendDataset !== this.props.sendDataset) {\n       \n            this.setState({data: sendDataset})\n        }\n        \n    }\n    render() {\n        return (\n            <div style={{textAlign: 'center', marginTop: '32px'}}>\n                <div class=\"slidecontainer\"> min: {this.amountRangestart}\n                    <input type=\"range\" min={this.amountRangestart} max={this.amountRangeEnd} value={this.state.data} class=\"slider\" id=\"myRange\" step=\"1\" onChange={this.initRange.bind(this)}/>\n                    max: {this.amountRangeEnd}\n                    <p>value: <span id=\"demo\">{this.state.data}</span></p>\n                </div> \n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport TextBox from './TextBox'\nimport Slider from '../slider/Slider'\nimport  config  from '../../config/prod-config'\nimport { getLocalstore } from '../../service/service'\nexport default class UserInput extends Component  {\n    constructor() {\n        super();\n       \n        this.state = {\n            textbox : this.getFinalData(),\n            slider: 0,\n            textAmount: 0\n        }\n    }\n    getFinalData() {\n        let textData = config.textInput;\n        let finalData = config.textInput;\n        let getd = getLocalstore()\n    \n        if(getd) {\n            let pos = [getd.amount, getd.duration]\n            finalData = textData.map((d, index) => {\n                 d.init = pos[index]\n                 return d\n            })\n        }\n        console.log(finalData)\n        return finalData;\n    }\n    getText(dataset) {\n        this.setState({textAmount: dataset.loan_amount} )\n    }\n    getSlider(value) {\n        this.setState({slider: value})\n    }\n    render() {\n        return (\n            <div>\n                <TextBox dataset={this.state.textbox}  sliderInput={this.state.slider} getTextInfo={this.getText.bind(this)} />\n                <Slider getSliderValue={this.getSlider.bind(this)}  sendDataset={this.state.textAmount}></Slider>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './result-level.css'\nimport store from '../../store/redux-store'\nimport { actSetLocalstorageData, getLocalstore } from '../../service/service'\n\nexport default class ResultLevel extends React.Component {\n\n    constructor() {\n        super();\n     \n        let getd = getLocalstore()\n        let objset = {\n            interestRate: 0,\n            monthlyPayment: 0\n        }\n        if(getd) {\n            objset.interestRate = getd.rate\n            objset.monthlyPayment = getd.monthlyPayment\n        }\n        this.state = objset\n    }\n    componentWillMount() {\n        store.subscribe( () => {\n            console.log( 'My store has changed: State value =', store.getState() );\n            let {amount, duration} = store.getState().info.input;\n             let {interestRate, monthlyPayment} = store.getState().info.result;\n             actSetLocalstorageData(amount, duration,interestRate, monthlyPayment.amount)\n            this.setState({\n                interestRate,\n                monthlyPayment: monthlyPayment.amount\n            })\n        \n    });\n    }\n    render() {\n        return (\n            <div class=\"output\">\n               <div class=\"item-output\">\n                    <h5 style={{marginRight: '12px'}}>interest rate: </h5> <h5>{this.state.interestRate}</h5>\n               </div>\n               <div class=\"item-output\">\n                    <h5 style={{marginRight: '12px'}}>monthly payment: </h5> <h5>{this.state.monthlyPayment}</h5>\n               </div>\n            </div>\n        );\n    }\n \n}\n","import React, { Component } from 'react';\nimport UserInput from '../userInput/UserInput';\nimport Result from '../result/resultLevel';\n\nexport default class Init extends Component {\n    \n    render() {\n       return ( \n        <div>\n            <UserInput/>\n            <Result/>\n        </div>\n       );\n    }\n}","import React from 'react';\nimport './App.css';\nimport Init from './components/init/Init'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Init/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}